# Name of your GitHub Actions workflow.
name: Build & Publish to GitHub Pages

# Specifies to run this workflow whenever a push is made (commits are
# added) to the branch named `jekyll`.
on:
  push:
    branches:
      # Change this to the branch where you keep your Jekyll code.
      - master

# Define a job named `build-and-publish` in your workflow.
jobs:
  build-and-publish:
    runs-on: ubuntu-latest # This job uses a GitHub-hosted runner.

    services:
      # befor this service is startet the repository
      # https://github.com/AKSW/aksw.org-model.git
      # needs to be clones to /tmp/aksw-models or some other path
      fuseki:
        image: stain/jena-fuseki
        ports:
        - 3030:3030
        volumes:
          /tmp/aksw-model:/staging
        options: --entrypoint "exec /jena-fuseki/fuseki-server --file=/staging/aksw.org.nt /aksw"

    steps:
      # Checkout the source from the `jekyll` branch.
      - uses: actions/checkout@v2

      env:
        # use mongodb for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        FUSEKI_HOST: fuseki
        FUSEKI_PORT: ${{ job.services.fuseki.ports[3030] }}
      # Invoke this action against the newly checked out source code.
      # - uses: fabacab/jekyll-builder-for-github-pages-action@master
      #   with:
      #     # Provide this action with your repository's `GH_PAGES_TOKEN`
      #     # "Secret" variable. This should be the value of a personal
      #     # access token granted, at a minimum, the `public_repo` and
      #     # the `repo_deployment` scopes needed to deploy to GH Pages.
      #     secret_gh_pages_api_token: ${{ secrets.GH_PAGES_TOKEN }}
